/**
 * @fileoverview gRPC-Web generated client stub for grpc
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.6.1
// source: refurb.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require("grpc-web");

var google_protobuf_wrappers_pb = require("google-protobuf/google/protobuf/wrappers_pb.js");
const proto = {};
proto.grpc = require("./refurb_pb.js");

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.grpc.refurbClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = "binary";

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, "");
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.grpc.refurbPromiseClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = "binary";

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, "");
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.grpc.SfwUpRequest,
 *   !proto.grpc.SfwUpResponse>}
 */
const methodDescriptor_refurb_SfwUp = new grpc.web.MethodDescriptor(
  "/grpc.refurb/SfwUp",
  grpc.web.MethodType.UNARY,
  proto.grpc.SfwUpRequest,
  proto.grpc.SfwUpResponse,
  /**
   * @param {!proto.grpc.SfwUpRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.grpc.SfwUpResponse.deserializeBinary
);

/**
 * @param {!proto.grpc.SfwUpRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.grpc.SfwUpResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.grpc.SfwUpResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.grpc.refurbClient.prototype.sfwUp = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/grpc.refurb/SfwUp",
    request,
    metadata || {},
    methodDescriptor_refurb_SfwUp,
    callback
  );
};

/**
 * @param {!proto.grpc.SfwUpRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.grpc.SfwUpResponse>}
 *     Promise that resolves to the response
 */
proto.grpc.refurbPromiseClient.prototype.sfwUp = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + "/grpc.refurb/SfwUp",
    request,
    metadata || {},
    methodDescriptor_refurb_SfwUp
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.grpc.FwUpRequest,
 *   !proto.grpc.FwUpResponse>}
 */
const methodDescriptor_refurb_FwUp = new grpc.web.MethodDescriptor(
  "/grpc.refurb/FwUp",
  grpc.web.MethodType.UNARY,
  proto.grpc.FwUpRequest,
  proto.grpc.FwUpResponse,
  /**
   * @param {!proto.grpc.FwUpRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.grpc.FwUpResponse.deserializeBinary
);

/**
 * @param {!proto.grpc.FwUpRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.grpc.FwUpResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.grpc.FwUpResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.grpc.refurbClient.prototype.fwUp = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/grpc.refurb/FwUp",
    request,
    metadata || {},
    methodDescriptor_refurb_FwUp,
    callback
  );
};

/**
 * @param {!proto.grpc.FwUpRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.grpc.FwUpResponse>}
 *     Promise that resolves to the response
 */
proto.grpc.refurbPromiseClient.prototype.fwUp = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + "/grpc.refurb/FwUp",
    request,
    metadata || {},
    methodDescriptor_refurb_FwUp
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.grpc.CmdRequest,
 *   !proto.grpc.CmdResponse>}
 */
const methodDescriptor_refurb_Cmd = new grpc.web.MethodDescriptor(
  "/grpc.refurb/Cmd",
  grpc.web.MethodType.UNARY,
  proto.grpc.CmdRequest,
  proto.grpc.CmdResponse,
  /**
   * @param {!proto.grpc.CmdRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.grpc.CmdResponse.deserializeBinary
);

/**
 * @param {!proto.grpc.CmdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.grpc.CmdResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.grpc.CmdResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.grpc.refurbClient.prototype.cmd = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + "/grpc.refurb/Cmd",
    request,
    metadata || {},
    methodDescriptor_refurb_Cmd,
    callback
  );
};

/**
 * @param {!proto.grpc.CmdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.grpc.CmdResponse>}
 *     Promise that resolves to the response
 */
proto.grpc.refurbPromiseClient.prototype.cmd = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + "/grpc.refurb/Cmd",
    request,
    metadata || {},
    methodDescriptor_refurb_Cmd
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.grpc.PpGetRequest,
 *   !proto.grpc.PpGetResponse>}
 */
const methodDescriptor_refurb_PpGet = new grpc.web.MethodDescriptor(
  "/grpc.refurb/PpGet",
  grpc.web.MethodType.UNARY,
  proto.grpc.PpGetRequest,
  proto.grpc.PpGetResponse,
  /**
   * @param {!proto.grpc.PpGetRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.grpc.PpGetResponse.deserializeBinary
);

/**
 * @param {!proto.grpc.PpGetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.grpc.PpGetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.grpc.PpGetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.grpc.refurbClient.prototype.ppGet = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/grpc.refurb/PpGet",
    request,
    metadata || {},
    methodDescriptor_refurb_PpGet,
    callback
  );
};

/**
 * @param {!proto.grpc.PpGetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.grpc.PpGetResponse>}
 *     Promise that resolves to the response
 */
proto.grpc.refurbPromiseClient.prototype.ppGet = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + "/grpc.refurb/PpGet",
    request,
    metadata || {},
    methodDescriptor_refurb_PpGet
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.grpc.PpSetRequest,
 *   !proto.grpc.PpSetResponse>}
 */
const methodDescriptor_refurb_PpSet = new grpc.web.MethodDescriptor(
  "/grpc.refurb/PpSet",
  grpc.web.MethodType.UNARY,
  proto.grpc.PpSetRequest,
  proto.grpc.PpSetResponse,
  /**
   * @param {!proto.grpc.PpSetRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.grpc.PpSetResponse.deserializeBinary
);

/**
 * @param {!proto.grpc.PpSetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.grpc.PpSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.grpc.PpSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.grpc.refurbClient.prototype.ppSet = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/grpc.refurb/PpSet",
    request,
    metadata || {},
    methodDescriptor_refurb_PpSet,
    callback
  );
};

/**
 * @param {!proto.grpc.PpSetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.grpc.PpSetResponse>}
 *     Promise that resolves to the response
 */
proto.grpc.refurbPromiseClient.prototype.ppSet = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + "/grpc.refurb/PpSet",
    request,
    metadata || {},
    methodDescriptor_refurb_PpSet
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.grpc.PpIfRequest,
 *   !proto.grpc.PpIfResponse>}
 */
const methodDescriptor_refurb_PpIf = new grpc.web.MethodDescriptor(
  "/grpc.refurb/PpIf",
  grpc.web.MethodType.UNARY,
  proto.grpc.PpIfRequest,
  proto.grpc.PpIfResponse,
  /**
   * @param {!proto.grpc.PpIfRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.grpc.PpIfResponse.deserializeBinary
);

/**
 * @param {!proto.grpc.PpIfRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.grpc.PpIfResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.grpc.PpIfResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.grpc.refurbClient.prototype.ppIf = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/grpc.refurb/PpIf",
    request,
    metadata || {},
    methodDescriptor_refurb_PpIf,
    callback
  );
};

/**
 * @param {!proto.grpc.PpIfRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.grpc.PpIfResponse>}
 *     Promise that resolves to the response
 */
proto.grpc.refurbPromiseClient.prototype.ppIf = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + "/grpc.refurb/PpIf",
    request,
    metadata || {},
    methodDescriptor_refurb_PpIf
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.grpc.PpUpdateRequest,
 *   !proto.grpc.PpUpdateResponse>}
 */
const methodDescriptor_refurb_PpUpdate = new grpc.web.MethodDescriptor(
  "/grpc.refurb/PpUpdate",
  grpc.web.MethodType.UNARY,
  proto.grpc.PpUpdateRequest,
  proto.grpc.PpUpdateResponse,
  /**
   * @param {!proto.grpc.PpUpdateRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.grpc.PpUpdateResponse.deserializeBinary
);

/**
 * @param {!proto.grpc.PpUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.grpc.PpUpdateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.grpc.PpUpdateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.grpc.refurbClient.prototype.ppUpdate = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/grpc.refurb/PpUpdate",
    request,
    metadata || {},
    methodDescriptor_refurb_PpUpdate,
    callback
  );
};

/**
 * @param {!proto.grpc.PpUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.grpc.PpUpdateResponse>}
 *     Promise that resolves to the response
 */
proto.grpc.refurbPromiseClient.prototype.ppUpdate = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/grpc.refurb/PpUpdate",
    request,
    metadata || {},
    methodDescriptor_refurb_PpUpdate
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.grpc.BackupPartRequest,
 *   !proto.grpc.BackupPartResponse>}
 */
const methodDescriptor_refurb_BackupPart = new grpc.web.MethodDescriptor(
  "/grpc.refurb/BackupPart",
  grpc.web.MethodType.UNARY,
  proto.grpc.BackupPartRequest,
  proto.grpc.BackupPartResponse,
  /**
   * @param {!proto.grpc.BackupPartRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.grpc.BackupPartResponse.deserializeBinary
);

/**
 * @param {!proto.grpc.BackupPartRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.grpc.BackupPartResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.grpc.BackupPartResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.grpc.refurbClient.prototype.backupPart = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/grpc.refurb/BackupPart",
    request,
    metadata || {},
    methodDescriptor_refurb_BackupPart,
    callback
  );
};

/**
 * @param {!proto.grpc.BackupPartRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.grpc.BackupPartResponse>}
 *     Promise that resolves to the response
 */
proto.grpc.refurbPromiseClient.prototype.backupPart = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/grpc.refurb/BackupPart",
    request,
    metadata || {},
    methodDescriptor_refurb_BackupPart
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.grpc.UpdatePartRequest,
 *   !proto.grpc.UpdatePartResponse>}
 */
const methodDescriptor_refurb_UpdatePart = new grpc.web.MethodDescriptor(
  "/grpc.refurb/UpdatePart",
  grpc.web.MethodType.UNARY,
  proto.grpc.UpdatePartRequest,
  proto.grpc.UpdatePartResponse,
  /**
   * @param {!proto.grpc.UpdatePartRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.grpc.UpdatePartResponse.deserializeBinary
);

/**
 * @param {!proto.grpc.UpdatePartRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.grpc.UpdatePartResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.grpc.UpdatePartResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.grpc.refurbClient.prototype.updatePart = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/grpc.refurb/UpdatePart",
    request,
    metadata || {},
    methodDescriptor_refurb_UpdatePart,
    callback
  );
};

/**
 * @param {!proto.grpc.UpdatePartRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.grpc.UpdatePartResponse>}
 *     Promise that resolves to the response
 */
proto.grpc.refurbPromiseClient.prototype.updatePart = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/grpc.refurb/UpdatePart",
    request,
    metadata || {},
    methodDescriptor_refurb_UpdatePart
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.grpc.DeletePartRequest,
 *   !proto.grpc.DeletePartResponse>}
 */
const methodDescriptor_refurb_DeletePart = new grpc.web.MethodDescriptor(
  "/grpc.refurb/DeletePart",
  grpc.web.MethodType.UNARY,
  proto.grpc.DeletePartRequest,
  proto.grpc.DeletePartResponse,
  /**
   * @param {!proto.grpc.DeletePartRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.grpc.DeletePartResponse.deserializeBinary
);

/**
 * @param {!proto.grpc.DeletePartRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.grpc.DeletePartResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.grpc.DeletePartResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.grpc.refurbClient.prototype.deletePart = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/grpc.refurb/DeletePart",
    request,
    metadata || {},
    methodDescriptor_refurb_DeletePart,
    callback
  );
};

/**
 * @param {!proto.grpc.DeletePartRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.grpc.DeletePartResponse>}
 *     Promise that resolves to the response
 */
proto.grpc.refurbPromiseClient.prototype.deletePart = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/grpc.refurb/DeletePart",
    request,
    metadata || {},
    methodDescriptor_refurb_DeletePart
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.grpc.MakePartRequest,
 *   !proto.grpc.MakePartResponse>}
 */
const methodDescriptor_refurb_MakePart = new grpc.web.MethodDescriptor(
  "/grpc.refurb/MakePart",
  grpc.web.MethodType.UNARY,
  proto.grpc.MakePartRequest,
  proto.grpc.MakePartResponse,
  /**
   * @param {!proto.grpc.MakePartRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.grpc.MakePartResponse.deserializeBinary
);

/**
 * @param {!proto.grpc.MakePartRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.grpc.MakePartResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.grpc.MakePartResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.grpc.refurbClient.prototype.makePart = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/grpc.refurb/MakePart",
    request,
    metadata || {},
    methodDescriptor_refurb_MakePart,
    callback
  );
};

/**
 * @param {!proto.grpc.MakePartRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.grpc.MakePartResponse>}
 *     Promise that resolves to the response
 */
proto.grpc.refurbPromiseClient.prototype.makePart = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/grpc.refurb/MakePart",
    request,
    metadata || {},
    methodDescriptor_refurb_MakePart
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.grpc.WifiNvramUpdateRequest,
 *   !proto.grpc.WifiNvramUpdateResponse>}
 */
const methodDescriptor_refurb_WifiNvramUpdate = new grpc.web.MethodDescriptor(
  "/grpc.refurb/WifiNvramUpdate",
  grpc.web.MethodType.UNARY,
  proto.grpc.WifiNvramUpdateRequest,
  proto.grpc.WifiNvramUpdateResponse,
  /**
   * @param {!proto.grpc.WifiNvramUpdateRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.grpc.WifiNvramUpdateResponse.deserializeBinary
);

/**
 * @param {!proto.grpc.WifiNvramUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.grpc.WifiNvramUpdateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.grpc.WifiNvramUpdateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.grpc.refurbClient.prototype.wifiNvramUpdate = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/grpc.refurb/WifiNvramUpdate",
    request,
    metadata || {},
    methodDescriptor_refurb_WifiNvramUpdate,
    callback
  );
};

/**
 * @param {!proto.grpc.WifiNvramUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.grpc.WifiNvramUpdateResponse>}
 *     Promise that resolves to the response
 */
proto.grpc.refurbPromiseClient.prototype.wifiNvramUpdate = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/grpc.refurb/WifiNvramUpdate",
    request,
    metadata || {},
    methodDescriptor_refurb_WifiNvramUpdate
  );
};

module.exports = proto.grpc;
